apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'application'


repositories {
//    mavenLocal()
    jcenter()
}

buildscript {
    ext.kotlin_version = '1.3.71'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def dllDirectory = 'build/dll'

applicationDefaultJvmArgs = [
        "-Djna.library.path=" + dllDirectory,
        "-Djava.library.path=" + dllDirectory,
        "-XX:+UseG1GC",
        "-Xms256m"
]

run {
    systemProperty 'java.library.path', dllDirectory
}

test {
    systemProperty 'java.library.path', dllDirectory

    // This avoids running integration tests during the test target,
    // which also runs during a build. To run integration tests, first go into
    // IntelliJ settings and configure gradle to run tests with IntelliJ.
    // Then open the test file and use the play buttons.
	exclude 'tarehart/rlbot/integration/**'
}

dependencies {
    // Fetch the framework jar file
    compile 'org.rlbot.commons:framework:2.1+'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'org.ejml', name: 'ejml-fdense', version: '0.38'

    // This directory will be created and the interface dll copied into it at runtime.
    // The end result is that the interface dll will be on the classpath.
    runtime files(dllDirectory)

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.jfree', name: 'jfreechart', version: '1.5.0'
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
}

mainClassName = 'tarehart.rlbot.ReliefBotMainKt'

// You can run gradew distZip to generate a zip file suitable for tournament submissions
distZip {
    into ('README') {
        from 'README_Tournament.md'
        from fileTree('src/main/python') {
            exclude '__pycache__'
        }
    }
}

installDist {
    into ('../README') {
        from 'README_Tournament.md'
        from fileTree('src/main/python') {
            exclude '__pycache__'
        }
    }
}

// https://github.com/gradle/gradle/issues/1989
startScripts {
    doLast {
        windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task createDllDirectory {
    mkdir dllDirectory
}

run.dependsOn createDllDirectory
